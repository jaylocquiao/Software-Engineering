/*
 * Main User Interface (Home)
 */
package cs444project.presentation;

import cs444project.domain.*;
import cs444project.service.*;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author Ce-Jay Locquiao
 */
public class MainUI extends javax.swing.JFrame {

    private Account account = null; //the users account

    public void setAccount(Account account) { // the setter
        this.account = account;
        model.setDonations(account.getDonations()); //slide #16; not sure whats supposed to be in getDonations() method in Account class
    }
    
    private DonationTableModel model = new DonationTableModel(); //TableModel; donationsTbl is JTable
    
    private int selectedRow = -1;

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        
        donationsTbl.setModel(model);
        
        donationsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = donationsTbl.rowAtPoint(evt.getPoint());
                if (row >= 0) {
                    selectedRow = row; //preserving the selected row
                    //System.out.println("*** clicked row: " + row);
                    donationTitleFld.setText(model.getValueAt(row, 0).toString());
                    donationTypeFld.setSelectedItem(model.getValueAt(row, 1).toString());
                    donationValueFld.setSelectedItem(model.getValueAt(row, 2).toString());
                }
            }
        });
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        donationTypeFld = new javax.swing.JComboBox<>();
        donationValueFld = new javax.swing.JComboBox<>();
        donationTitleFld = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        searchHistoryButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        donationsTbl = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        signOutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Donation Tracker - Main Menu");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Donation Title");

        jLabel2.setText("Donation Type");
        jLabel2.setToolTipText("");

        jLabel3.setText("Donation Value");

        donationTypeFld.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Money", "Clothes" }));
        donationTypeFld.setToolTipText("Select a type of donation");
        donationTypeFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donationTypeFldActionPerformed(evt);
            }
        });

        donationValueFld.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "$5", "$10", "$15", "$20", "$25", "$30", "$35", "$40", "$45", "$50", "$55", "$60", "$65", "$70", "$75", "$80", "$85", "$90", "$95", "$100", "Shirt", "Pants", "Shorts", "Hoodie" }));
        donationValueFld.setToolTipText("Select a value of the donation");

        donationTitleFld.setToolTipText("Enter name of donation");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        searchHistoryButton.setText("Search History");
        searchHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchHistoryButtonActionPerformed(evt);
            }
        });

        donationsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Donation Title", "Donation Type", "Donation Value", "Date Created"
            }
        ));
        jScrollPane2.setViewportView(donationsTbl);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Donation Tracker");

        signOutButton.setText("Sign Out");
        signOutButton.setToolTipText("Sign Out of Application");
        signOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchHistoryButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(donationValueFld, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(donationTitleFld)
                            .addComponent(donationTypeFld, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(131, 131, 131)
                        .addComponent(signOutButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(signOutButton))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donationTitleFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donationTypeFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(donationValueFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(updateButton)
                    .addComponent(deleteButton)
                    .addComponent(searchHistoryButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void donationTypeFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donationTypeFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donationTypeFldActionPerformed

    /**
     * References:
     * transferring data from one JTable in a frame to another in a different frame : https://www.youtube.com/watch?v=Zt4g6HiFNxo
     * inserting rows to a JTable : https://stackoverflow.com/questions/13713132/adding-rows-to-jtable-in-the-right-order
     * check to see if a row is selected : https://stackoverflow.com/questions/38336113/jtable-if-any-row-is-selected
     * 
     * @param evt 
     */
    private void searchHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchHistoryButtonActionPerformed
        //this.setVisible(false);
        
        TableModel model1 = donationsTbl.getModel();
        int indexes[] = donationsTbl.getSelectedRows();
        Object[] column = new Object[4];
        HistoryUI history = new HistoryUI();
        
        if (donationsTbl.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select row(s). Use CTRL + CLICK to select multiple rows." , "Try Again", JOptionPane.INFORMATION_MESSAGE);
        } else {
            DefaultTableModel model2 = (DefaultTableModel)history.donationHistoryTbl.getModel();
            for(int i = 0; i < indexes.length; i++) {
                column[0] = model1.getValueAt(indexes[i], 3);
                column[1] = model1.getValueAt(indexes[i], 0);
            
                model2.insertRow(0, column);
            }
            history.setVisible(true);
        }
    }//GEN-LAST:event_searchHistoryButtonActionPerformed

    private void signOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutButtonActionPerformed
        this.setVisible(false);
        LoginUI loginUI = new LoginUI();
        loginUI.setVisible(true);
    }//GEN-LAST:event_signOutButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        Donation donation = new Donation();
        donation.setDonationTitle(donationTitleFld.getText());
        donation.setDonationType(donationTypeFld.getSelectedItem().toString());
        donation.setDonationValue(donationValueFld.getSelectedItem().toString());

        boolean isValid = donation.validateDonation();
        if (!isValid) {
            JOptionPane.showMessageDialog(this, "All fields are required for a Donation", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        account.add(donation);
        IAccountSvc impl = AccountSvcCacheImpl.getInstance();
        account = impl.update(account);
        if (account == null) {
            JOptionPane.showMessageDialog(this, "Your Donation was not saved; please try again", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        model.fireTableDataChanged(); //reloading the table
        
        int donationTypeIndex = donationTypeFld.getSelectedIndex();
        int donationValueIndex = donationValueFld.getSelectedIndex();
        if (donationTitleFld.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Your Donation needs a title!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (donationTypeIndex == 0) {
            JOptionPane.showMessageDialog(this, "Your Donation needs a type!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (donationValueIndex == 0) {
            JOptionPane.showMessageDialog(this, "Your Donation needs a value!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Your new Donation has been saved", "Saved Donation", JOptionPane.INFORMATION_MESSAGE);
                donationTitleFld.setText("");
                donationTypeFld.setSelectedIndex(0);
                donationValueFld.setSelectedIndex(0);
        }
        
    }//GEN-LAST:event_createButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if (selectedRow >= 0) {
            //Update Donation with the data from the form fields
            Donation donation = account.getDonations().get(selectedRow); // get donation from the account using the selectedRow variable
            donation.setDonationTitle(donationTitleFld.getText());
            donation.setDonationType(donationTypeFld.getSelectedItem().toString());
            donation.setDonationValue(donationValueFld.getSelectedItem().toString());
            if (donation.getDonationTitle().equals("") || donation.getDonationType().equals("") || donation.getDonationValue().equals("")) {
                JOptionPane.showMessageDialog(this, "Please fill out all fields; don't leave any fields blank!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                
                model.fireTableDataChanged(); //reloading the table
                reset();
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (selectedRow >= 0) {
            //confirm the deletion
            int selectedOption = JOptionPane.showConfirmDialog(null, "Delete the selected row?", "Yes/No", JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_OPTION) {
                account.getDonations().remove(selectedRow); //removing the donation
                model.fireTableDataChanged();
                reset();
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void reset() {
        selectedRow = -1;
        donationTitleFld.setText("");
        donationTypeFld.setSelectedIndex(0);
        donationValueFld.setSelectedIndex(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField donationTitleFld;
    private javax.swing.JComboBox<String> donationTypeFld;
    private javax.swing.JComboBox<String> donationValueFld;
    private javax.swing.JTable donationsTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchHistoryButton;
    private javax.swing.JButton signOutButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
